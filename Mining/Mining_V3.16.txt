//===== EinherjarRO Scripts ================================== 
//= Mining System 
//===== By: ================================================== 
//= Stolao
//===== Current Version: ===================================== 
//= 3.16
//===== Compatible With: ===================================== 
//= rAthena SVN
//===== Description: ========================================= 
//= Mining System 
//===== Comments: ============================================
//= [Stolao]
//= Needs More Mining Spots
//= Add Prision Mine
//===== Additional Comments: =================================
//= 1.00 Basic Layout
//= 1.01 Miner NPC
//= 1.02 Mine#mjo_dun03 
//= 1.03 Cost SP by % Based off Mining Level
//= 1.04 If SP < 10% Cant Mine
//= 1.05 Lower Chance of Disguise Clip
//= 1.06 Add Effect When Death
//= 1.07 Made Level Scipt Shorter
//= 2.00 Switch to a Function Based Script
//= 2.01 Changed Zeny Formulars
//= 2.02 Changed Miner into a shop -check npc/neo/shop.txt
//= 2.03 Changed item list for less diversity
//= 2.04 Mine#Thor_v02  
//= 2.05 Removed max mining of 99 limit
//= 2.06 Changed Mine-Exp Formula made harder now MineMaster*(MineMaster*2+10)
//= 2.07 Incorperated Sect System into 
//= 2.08 Changed Break Formula to rely on Stats 
//= 2.09 Changed Miss Formula to rely on Stats
//= 2.0A Changed BOOM Formula to rely on Stats
//= 2.0B Changed Mine-Exp Formula made harder now MineMaster*(MineMaster*3)
//= 2.0C Added @zenymulti 
//= 2.0D Added @expmulti
//= 2.0E lowered @Anti-Break Chance
//= 2.0F Changed Mine-Exp Formula made harder now MineMaster*(MineMaster*4)
//= 2.10 Changed Mine-Exp Gaind from @pick to rand(@pick)
//= 2.11 Created a Mining Starter Quest
//= 2.12 Added Progress Bar
//= 2.13 Fixed a bug in the "rare" probablility
//= 3.00 Revamp Again
//= 3.01 changed .@t to be getequipid(EQI_HAND_R)-29019
//= 3.02 Removed Quanity Arrays
//= 3.03 Changed Item array names
//= 3.04 Added .0Item Array
//= 3.05 Made Getitem pick a random Array
//= 3.06 Added Array Length check to .@i
//= 3.07 Added sc_end to script
//= 3.08 Changen Mine_LVL and Mine_exp to MineMaster and MineExp\
//= 3.09 Changed sc_end SC_ALL to sc_end SC_CP_WEAPON
//= 3.0A Added a Break Chance
//= 3.0B Added .BreakRate
//= 3.0C Fixed Missing " in areamonster
//= 3.0D Fixed Missing } in script
//= 3.0E Reformatted set .@item using switch instead of getd
//= 3.0F Fixed typo in .@i leading to -MineExp Gained
//= 3.10 Added in a Break chance in script as well
//= 3.11 Made itemlist more random
//= 3.12 prep for more locations
//= 3.13 Crystals spawn in random map
//= 3.14 changed dispbutton to announce in Mine Level Up
//= 3.15 Changed rate of gaining nothing when Mining
//= 3.16 Changed mine exp rate to minimal of 1 exp
//===== Contact Ifo: =========================================
//= [Stolao] 
//= Email: Taingram11@gmail.com
//============================================================

-	script	Mining#001	-1,{
OnKillRockEvent:
	set .@m,rand(2996,2999);
	set .@s,rand(getarraysize(.Map$));
	areamonster .Map$[.@s],.X1[.@s],.Y1[.@s],.X2[.@s],.Y2[.@s],"Crystal",.@m,1,"Mining#001::OnKillRockEvent";
	set .@T,(getequipid(EQI_HAND_R)-29019);
	if( .@T < 1 || .@T > 5 ){ 
		dispbottom ""+strcharinfo(0)+" You dont have a pickaxe..."; end; 
	} else {
		sc_end SC_CP_WEAPON;
		set .@c,rand(.@T+1);
		set .@i,rand(MineMaster*12/10+7);
		if(.@i >= getarraysize(getd("."+.@c+"Item"))) set .@i,rand(getarraysize(getd("."+.@c+"Item")));
		if( rand(.@T+5) < 2){ end; }
		set .@stats,readparam(bDex)*3+readparam(bLuk)*4+JobLevel*5;
		if(.Mode&1 &&(((5*.BreakMulti)-(.@T*.BreakMulti))*.BreakRate/100) > rand(10000+.@stats)){
			set .@B,.@T+29019;
			dispbottom "Your "+getitemname(.@B)+" has broken";
			delitem .@B,1;
			sc_start SC_STRIPWEAPON,1000,1000;
			end;
		}
		if(.Mode&2 && (((5*.DamageMulti)-(.@T*.DamageMulti))*.BreakRate/100) > rand(10000+.@stats)){
			set .@B,.@T+29019;
			dispbottom "Your "+getitemname(.@B)+" was damaged";
			delitem .@B,1;
			getitem2 .@B,1,1,0,1,0,0,0,0;
			sc_start SC_STRIPWEAPON,1000,1000;
			end;
		}
		specialeffect2 154;
		if(rand(1)==3){
				//insert location based items
		} else {switch(.@c){
				default:
				case 0:	set .@item,.0Item[.@i];	break;
				case 1:	set .@item,.1Item[.@i];	break;
				case 2:	set .@item,.2Item[.@i];	break;
				case 3:	set .@item,.3Item[.@i];	break;
				case 4:	set .@item,.4Item[.@i];	break;
				case 5:	set .@item,.5Item[.@i];	break;
			}
		}
		getitem .@item,1;
		set .@expneed,MineMaster*(MineMaster*.expcurve)+10+MineMaster;
		set .@x,((.@c+1)*.@i/3+1)*.ExpRate/100;
		getexp .@x,.@x;
		set MineExp,MineExp+.@x;
		if(MineExp > .@expneed && MineMaster < .MinelvlMax){
			set MineMaster,MineMaster+1;
			set MineExp,0;
			announce "Mining Level has advanced to Lv "+MineMaster+"!",bc_blue|bc_self;
			specialeffect2 371;
		}
		dispbottom ""+.@x+" Mining Exp Gained "+(.@expneed-MineExp)+" Exp to Lv "+(MineMaster-1)+"";
	}
end;
OnInit:
	set .TotalMobs,10;
	set .Mode,2;
	set .BreakRate,75;
	set .BreakMulti,5;
	set .DamageMulti,10;
	set .ExpRate,100;
	set .MinelvlMax,100;
	set .expcurve,50;
	setarray .Map$,"prontera","prontera";
	setarray .X1,	139,	   168;
	setarray .X2,	143,	   175;
	setarray .Y1,	199,	   198;
	setarray .Y2,	192,	   192;
//		       1,    2,    3,    4,    5,    6,    7,    8,    9,   10,   11,   12,   13,   14,   15,   16,   17,   18,   19,   20,   21,   22,   23,   24,   25,   26,   27,   28,   29,   30,   31,   32,   33,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,   45,   46,   47,   48,   49,   50,   51,   52,   53,   54,   55,   56,   57
	setarray .M, 701,  713,  909,  910,  911,  912,  913,  915,  917,  920,  928,  930,  931,  932,  934,  935,  936,  940, 1007, 1013, 1014, 1016, 1026, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,29000,29001,29002,29003,29025,29026,29041,29042,909;
	setarray .O, 756,  757,  985,  986,  990,  991,  992,  993,  994,  995,  996,  997,  998,  999, 1000, 1001, 1002, 1003, 1010, 1011,12734,12735,12736,12737,12738,27200,27201,27206,27211,27216,27221,27226;
	setarray .C, 516,  601,  602,  603,  604,  609,  612,  613,  614,  615,  617,  644,  645,  656,  657,25852;
	setarray .E,1103, 1006, 1009, 1053, 1203, 1209, 1215, 1303, 1353, 1403, 1406, 1503, 1703, 2101, 2103, 2208, 2301, 2303, 2312, 2316, 2401, 2403, 2405, 2501, 2503, 2505, 2601, 2602, 2603, 2604, 2605, 2607,29020;
	setarray .G, 714,  715,  716,  717,  718,  719,  720,  721,  722,  723,  724,  725,  726,  727,  728,  729,  730, 731,  732,  733,  969, 7444;
	//Level			0s		1s		2s		3s		4s		5s		6s		7s		8s		9s
	setarray .0Item,	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],
				.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],
				.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],
				.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],
				.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],
				.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],
				.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.O[rand(8)],	.O[rand(8)],	.O[rand(8)],	.O[rand(8)],	.O[rand(8)],	.O[rand(8)],	.O[rand(8)],
				.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.O[rand(16)],	.O[rand(16)],	.O[rand(16)],	.O[rand(16)],	.O[rand(16)],	.O[rand(16)],
				.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],
				.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)];

	//Level			0s		1s		2s		3s		4s		5s		6s		7s		8s		9s
	setarray .1Item,	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],
				.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],
				.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],
				.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],
				.O[rand(2)],	.O[rand(2)],	.O[rand(14)],	.O[rand(14)],	.M[rand(58)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.M[rand(58)],	.M[rand(58)],
				.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],
				.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.M[rand(58)],
				.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.M[rand(58)],	.M[rand(58)],
				.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(22)],
				.O[rand(4)],	.O[rand(4)],	.O[rand(4)],	.O[rand(4)],	.O[rand(4)],	.O[rand(4)],	.O[rand(4)],	.O[rand(4)];

	//Level			0s		1s		2s		3s		4s		5s		6s		7s		8s		9s
	setarray .2Item,	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],
				.C[rand(17)],	.O[rand(18)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],
				.O[rand(18)],	.O[rand(18)],	.O[rand(18)],	.O[rand(18)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.O[rand(2)],	.O[rand(2)],	.O[rand(18)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(18)],	.O[rand(18)],
				.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(18)],	.O[rand(18)],	.O[rand(18)],
				.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(4)],	.O[rand(4)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],
				.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],
				.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],
				.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(22)],
				.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)],	.O[rand(5,13)];	

	//Level			0s		1s		2s		3s		4s		5s		6s		7s		8s		9s
	setarray .3Item,	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(4)],	.O[rand(4)],
				.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],
				.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],
				.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],
				.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(22)],
				.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(1,3)],	.G[rand(22)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)];

	//Level			0s		1s		2s		3s		4s		5s		6s		7s		8s		9s
	setarray .4Item,	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],
				.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],	.O[rand(2)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],
				.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],	.M[rand(58)],	.M[rand(58)],	.M[rand(58)],	.C[rand(17)],
				.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],	.E[rand(34)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],	.G[rand(17)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)];			

	//Level			0s		1s		2s		3s		4s		5s		6s		7s		8s		9s
	setarray .5Item,	.O[rand(4)],	.O[rand(4)],	.O[rand(4)],	.O[rand(4)],	.O[rand(4)],	.O[rand(4)],	.O[rand(4)],	.O[rand(4)],	.O[rand(4)],	.O[rand(4)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],
				.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],	.O[rand(33)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],
				.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],
				.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],
				.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],	.G[rand(22)],
				.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],
				.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	.G[rand(23)],
				.G[rand(23)],	.G[rand(23)],	.G[rand(23)],	28000,		29028,		29023,		29033,		28017;
	for(set .@i,0; .@i<.TotalMobs; set .@i,.@i+1){
		set .@m,rand(2996,2999);
		set .@s,rand(getarraysize(.Map$));
		areamonster .Map$[.@s],.X1[.@s],.Y1[.@s],.X2[.@s],.Y2[.@s],"Crystal",.@m,1,"Mining#001::OnKillRockEvent";
	}

end;
}
